[
  {
    "objectID": "agent_exp.html",
    "href": "agent_exp.html",
    "title": "Experiments in FAIR Agentic Assistants",
    "section": "",
    "text": "import json\n\n# Function to create a JSON-LD object for ROCrate\ndef create_rocrate():\n    rocrate = {\n        \"@context\": \"https://w3id.org/ro/crate/1.1/context\",\n        \"@type\": \"CreativeWork\",\n        \"author\": \"Josiah Carberry\",\n        \"instrument\": {\n            \"@id\": \"#HRS750\",\n            \"@type\": \"Thing\",\n            \"name\": \"HRS750\",\n            \"manufacturer\": \"Teledyne Princeton Instruments\"\n        },\n        \"hasPart\": [\n            {\n                \"@id\": \"#instr-owner\",\n                \"@type\": \"Organization\",\n                \"name\": \"NSF facility MagLab\",\n                \"url\": \"https://ror.org/03s53g630\"\n            },\n            {\n                \"@type\": \"Person\",\n                \"name\": \"Josiah Carberry\",\n                \"url\": \"https://orcid.org/0000-0002-1825-0097\",\n                \"ownerOf\": {\n                    \"@id\": \"#instr-owner\"\n                }\n            },\n            {\n                \"@id\": \"#lightfield\",\n                \"@type\": \"SoftwareApplication\",\n                \"name\": \"LightField\",\n                \"author\": \"Teledyne Princeton Instruments\",\n                \"supports\": [\n                    \"#HRS750\",\n                    \"#IsoPlane\"\n                ],\n                \"sameAs\": \"https://www.princetoninstruments.com/products/software-family/lightfield\"\n            }\n        ],\n        \"distribution\": [\n            {\n                \"@type\": \"Dataset\",\n                \"name\": \"PL WSe2-MoSe2\",\n                \"contentUrl\": \"PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\",\n                \"experimentType\": \"PL\",\n                \"sampleShortName\": \"WSe2-MoSe2\",\n                \"magneticField\": \"0T to 5.2T\",\n                \"temperature\": \"10K\",\n                \"lightSource\": \"633nm-100uW\",\n                \"centralWlEnergy\": \"720nm\",\n                \"slitValue\": \"30um\",\n                \"acquisitionTime\": \"2min\",\n                \"objectiveNa\": \"0.65NA\"\n            },\n            {\n                \"@type\": \"Dataset\",\n                \"name\": \"Ra CsPr\",\n                \"contentUrl\": \"Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\",\n                \"experimentType\": \"Ra\",\n                \"sampleShortName\": \"CsPr\",\n                \"magneticField\": \"30T\",\n                \"temperature\": \"7.2K\",\n                \"lightSource\": \"532nm-2mW\",\n                \"centralWlEnergy\": \"550cm-1\",\n                \"slitValue\": \"30um\",\n                \"acquisitionTime\": \"3x2min\",\n                \"objectiveNa\": \"0.82NA\"\n            },\n            {\n                \"@type\": \"Dataset\",\n                \"name\": \"Re InSe\",\n                \"contentUrl\": \"Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate_Sweep_-10V_to_+20V.SPE\",\n                \"experimentType\": \"Re\",\n                \"sampleShortName\": \"InSe\",\n                \"magneticField\": \"0T\",\n                \"temperature\": \"5K\",\n                \"lightSource\": \"SC-20%600meV\",\n                \"slitValue\": \"50um\",\n                \"acquisitionTime\": \"5sec\",\n                \"objectiveNa\": \"0.65NA\",\n                \"otherConditions\": \"Gate Sweep -10V to +20V\"\n            }\n        ]\n    }\n    return rocrate\n\n# Create the JSON-LD ROCrate\nrocrate_content = create_rocrate()\n\n# Write the ROCrate to a file\nwith open('ro-crate-metadata.jsonld', 'w') as f:\n    json.dump(rocrate_content, f, indent=2)\n\n\nimport json\nfrom rdflib import Graph\n\n# Load the JSON-LD ROCrate content from the file\nwith open('ro-crate-metadata.jsonld', 'r') as f:\n    rocrate_content = json.load(f)\n\n# Create an RDFLib Graph\ngraph = Graph()\n\n# Parse the JSON-LD content into the graph\ngraph.parse(data=json.dumps(rocrate_content), format='json-ld')\n\n# Serialize the graph to Turtle format and print it\nturtle_data = graph.serialize(format='turtle')\nprint(turtle_data)\n\n@prefix schema1: &lt;http://schema.org/&gt; .\n\n&lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#HRS750&gt; a schema1:Thing ;\n    schema1:manufacturer \"Teledyne Princeton Instruments\" ;\n    schema1:name \"HRS750\" .\n\n&lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#instr-owner&gt; a schema1:Organization ;\n    schema1:name \"NSF facility MagLab\" ;\n    schema1:url \"https://ror.org/03s53g630\" .\n\n&lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#lightfield&gt; a schema1:SoftwareApplication ;\n    schema1:author \"Teledyne Princeton Instruments\" ;\n    schema1:name \"LightField\" ;\n    schema1:sameAs \"https://www.princetoninstruments.com/products/software-family/lightfield\" .\n\n[] a schema1:CreativeWork ;\n    schema1:author \"Josiah Carberry\" ;\n    schema1:distribution [ a schema1:Dataset ;\n            schema1:contentUrl \"Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate_Sweep_-10V_to_+20V.SPE\" ;\n            schema1:name \"Re InSe\" ],\n        [ a schema1:Dataset ;\n            schema1:contentUrl \"Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\" ;\n            schema1:name \"Ra CsPr\" ],\n        [ a schema1:Dataset ;\n            schema1:contentUrl \"PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\" ;\n            schema1:name \"PL WSe2-MoSe2\" ] ;\n    schema1:hasPart [ a schema1:Person ;\n            schema1:name \"Josiah Carberry\" ;\n            schema1:url \"https://orcid.org/0000-0002-1825-0097\" ],\n        &lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#instr-owner&gt;,\n        &lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#lightfield&gt; ;\n    schema1:instrument &lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#HRS750&gt; .\n\n\n\n\n\nimport json\nfrom rdflib import Graph\n\n# Load the JSON-LD ROCrate content from the file\nwith open('ro-crate-metadata.jsonld', 'r') as f:\n    rocrate_content = json.load(f)\n\n# Create an RDFLib Graph\ngraph = Graph()\n\n# Parse the JSON-LD content into the graph\ngraph.parse(data=json.dumps(rocrate_content), format='json-ld')\n\n# Serialize the graph to Turtle format (optional)\nturtle_data = graph.serialize(format='turtle')\n# Print the serialized Turtle data directly since it is already a string\nprint(turtle_data)\n\n# SPARQL query to retrieve the author's name\nquery = \"\"\"\nPREFIX schema1: &lt;http://schema.org/&gt;\nSELECT ?authorName WHERE {\n    ?s schema1:author ?author .\n    ?author schema1:name ?authorName .\n}\n\"\"\"\n\n# Execute the SPARQL query\nresults = graph.query(query)\n\n# Print the results\nfor row in results:\n    print(\"Author Name:\", row[\"authorName\"])\n\n@prefix schema1: &lt;http://schema.org/&gt; .\n\n&lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#HRS750&gt; a schema1:Thing ;\n    schema1:manufacturer \"Teledyne Princeton Instruments\" ;\n    schema1:name \"HRS750\" .\n\n&lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#instr-owner&gt; a schema1:Organization ;\n    schema1:name \"NSF facility MagLab\" ;\n    schema1:url \"https://ror.org/03s53g630\" .\n\n&lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#lightfield&gt; a schema1:SoftwareApplication ;\n    schema1:author \"Teledyne Princeton Instruments\" ;\n    schema1:name \"LightField\" ;\n    schema1:sameAs \"https://www.princetoninstruments.com/products/software-family/lightfield\" .\n\n[] a schema1:CreativeWork ;\n    schema1:author \"Josiah Carberry\" ;\n    schema1:distribution [ a schema1:Dataset ;\n            schema1:contentUrl \"PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\" ;\n            schema1:name \"PL WSe2-MoSe2\" ],\n        [ a schema1:Dataset ;\n            schema1:contentUrl \"Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\" ;\n            schema1:name \"Ra CsPr\" ],\n        [ a schema1:Dataset ;\n            schema1:contentUrl \"Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate_Sweep_-10V_to_+20V.SPE\" ;\n            schema1:name \"Re InSe\" ] ;\n    schema1:hasPart [ a schema1:Person ;\n            schema1:name \"Josiah Carberry\" ;\n            schema1:url \"https://orcid.org/0000-0002-1825-0097\" ],\n        &lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#instr-owner&gt;,\n        &lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#lightfield&gt; ;\n    schema1:instrument &lt;file:///Users/cvardema/dev/git/charlesvardeman/agentic-notebook-exp/nbs/#HRS750&gt; .",
    "crumbs": [
      "Experiments in FAIR Agentic Assistants"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "agentic-notebook-exp",
    "section": "",
    "text": "The nbdev tool requires Quarto to be installed for rendering of documents as html, pdf, etc. Quarto can be installed from here.\nThis repository uses PDM in a .venv folder. 1. Install pdm 2. Set pdm to use .venv\npdm config python.\n\nInstall depenencies using pdm\n\npdm install agentic_notebook_exp\nPDM will install Prezel AI and itâ€™s version of Jupyter lab. You can start prezel lab with:\npretzel lab",
    "crumbs": [
      "Install"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "agentic-notebook-exp",
    "section": "",
    "text": "The nbdev tool requires Quarto to be installed for rendering of documents as html, pdf, etc. Quarto can be installed from here.\nThis repository uses PDM in a .venv folder. 1. Install pdm 2. Set pdm to use .venv\npdm config python.\n\nInstall depenencies using pdm\n\npdm install agentic_notebook_exp\nPDM will install Prezel AI and itâ€™s version of Jupyter lab. You can start prezel lab with:\npretzel lab",
    "crumbs": [
      "Install"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "agentic-notebook-exp",
    "section": "How to use",
    "text": "How to use\nFill me in please! Donâ€™t forget code examples:",
    "crumbs": [
      "Install"
    ]
  },
  {
    "objectID": "fair_agent_langgraph.html",
    "href": "fair_agent_langgraph.html",
    "title": "LangGraph_Agent",
    "section": "",
    "text": "PIDInst Schema\nLangGraph HIL Reference\nForcing JSON-LD output structure\nPIDINST Schema Elements\nSchema.org Shapes\nHerbie - The Semantic Laboratory Notebook & Research Database\n\n\n# It appears that the 'langchain_openai' package is not installed. \n# We'll use a Jupyter bang command to install the necessary package.\n\nimport os\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import AIMessage, BaseMessage, HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nTrue\n\n\n\nexperiment_description = \"\"\"\nThe owner of the instrument is the NSF facility MagLab (https://ror.org/03s53g630). Josiah Carberryâ€™s (https://orcid.org/0000-0002-1825-0097) data acquisition info:\n\nThe experimental data (spectra) are acquired by a spectrometer (#1 HRS750, #2 IsoPlane, Teledyne Princeton Instruments). The spectrometers are (almost) fully automated and controlled via the LightField software (Teledyne Princeton Instruments). LightField automatically saves the acquired data and all experiment settings (spectrometer settings) in one file. https://www.princetoninstruments.com/products/software-family/lightfield\n\nLightField saves files in *.SPE format (whatever it means).\n\n\nFolder name: PI name_Experiment ID_Magnet system-Instrument_Start date\nFile name: Type of the experiment: PL, Ra(man), Re(flectance), Tr(ansmittance) Sample short name: **** Magnetic field: ***T (or from to ) Temperature: ***K Light source: SC, 532nm, 785nm, â€¦ - Power: ***mW or uW, or percentage Central frequency / wl/energy: ***cm-1, nm, eV Slit: value: *** um Acq.time: ***min or sec Objective NA: ***NA Other: gate voltage, pressure, â€¦\n\nPL_WSe2-MoSe2_00.0T_to_05.2T_ 10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE Re_InSe_0T_5K_SC-20%600meV_50um_5sec 0.65NA_Gate Sweep -10V to +20V.SPE\n\"\"\"\n\n\n# Necessary imports\nimport os\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Initialize the LLM model and prompt template\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are expert in FAIR data practices, schema.org, ROCrates. \"\n            \"Construct a JSON-LD ROCrate manifest based on this description. \"\n        ),\n        MessagesPlaceholder(variable_name=\"messages\"),\n    ]\n)\n\nllm = ChatOpenAI(model=\"gpt-4-turbo\")\n\nmodel_generate = prompt | llm\n\n# Function to generate JSON-LD string\ndef generate_jsonld_from_description(experiment_description: str) -&gt; str:\n    model_as_text = \"\"\n    \n    request = HumanMessage(\n        content=experiment_description\n    )\n    \n    for chunk in model_generate.stream({\"messages\": [request]}):\n        model_as_text += chunk.content\n\n    # The result should be the generated JSON-LD object\n    return model_as_text\n\n# Example usage\nexperiment_description = \"\"\"\nThe owner of the instrument is the NSF facility MagLab (https://ror.org/03s53g630). Josiah Carberryâ€™s (https://orcid.org/0000-0002-1825-0097) data acquisition info:\n\nThe experimental data (spectra) are acquired by a spectrometer (#1 HRS750, #2 IsoPlane, Teledyne Princeton Instruments). The spectrometers are (almost) fully automated and controlled via the LightField software (Teledyne Princeton Instruments). LightField automatically saves the acquired data and all experiment settings (spectrometer settings) in one file. https://www.princetoninstruments.com/products/software-family/lightfield\n\nLightField saves files in *.SPE format (whatever it means).\n\nFolder name: PI name_Experiment ID_Magnet system-Instrument_Start date\nFile name: Type of the experiment: PL, Ra(man), Re(flectance), Tr(ansmittance) Sample short name: **** Magnetic field: ***T (or from to ) Temperature: ***K Light source: SC, 532nm, 785nm, â€¦ - Power: ***mW or uW, or percentage Central frequency / wl/energy: ***cm-1, nm, eV Slit: value: *** um Acq.time: ***min or sec Objective NA: ***NA Other: gate voltage, pressure, â€¦\n\nPL_WSe2-MoSe2_00.0T_to_05.2T_ 10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE Re_InSe_0T_5K_SC-20%600meV_50um_5sec 0.65NA_Gate Sweep -10V to +20V.SPE\n\"\"\"\n\njsonld_output = generate_jsonld_from_description(experiment_description)\nprint(jsonld_output)\n\nTo construct a JSON-LD ROCrate manifest for the described dataset, we will include details about the dataset, the experiment, the instruments used, and the associated software. Below is an example of what the ROCrate manifest might look like based on the provided details:\n\n```json\n{\n  \"@context\": \"https://w3id.org/ro/crate/1.1/context\",\n  \"@graph\": [\n    {\n      \"@id\": \"ro-crate-metadata.json\",\n      \"@type\": \"CreativeWork\",\n      \"about\": {\"@id\": \"./\"},\n      \"identifier\": \"ro-crate-metadata.json\",\n      \"conformsTo\": {\"@id\": \"https://w3id.org/ro/crate/1.1\"}\n    },\n    {\n      \"@id\": \"./\",\n      \"@type\": \"Dataset\",\n      \"name\": \"Spectrometer Experimental Data\",\n      \"description\": \"Experimental data acquired using spectrometers at the NSF facility MagLab.\",\n      \"author\": {\n        \"@id\": \"https://orcid.org/0000-0002-1825-0097\"\n      },\n      \"dateCreated\": \"2023-09-20\",\n      \"license\": \"https://creativecommons.org/licenses/by/4.0/\"\n    },\n    {\n      \"@id\": \"https://orcid.org/0000-0002-1825-0097\",\n      \"@type\": \"Person\",\n      \"name\": \"Josiah Carberry\",\n      \"affiliation\": {\n        \"@id\": \"https://ror.org/03s53g630\"\n      }\n    },\n    {\n      \"@id\": \"https://ror.org/03s53g630\",\n      \"@type\": \"Organization\",\n      \"name\": \"MagLab\",\n      \"url\": \"https://nationalmaglab.org/\"\n    },\n    {\n      \"@id\": \"HRS750\",\n      \"@type\": \"Instrument\",\n      \"name\": \"HRS750 Spectrometer\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"IsoPlane\",\n      \"@type\": \"Instrument\",\n      \"name\": \"IsoPlane Spectrometer\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"https://www.princetoninstruments.com/products/software-family/lightfield\",\n      \"@type\": \"SoftwareApplication\",\n      \"name\": \"LightField\",\n      \"publisher\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@type\": \"File\",\n      \"name\": \"PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\",\n      \"contentSize\": \"2MB\",\n      \"encodingFormat\": \"application/octet-stream\"\n    },\n    {\n      \"@type\": \"File\",\n      \"name\": \"Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\",\n      \"contentSize\": \"1.5MB\",\n      \"encodingFormat\": \"application/octet-stream\"\n    },\n    {\n      \"@type\": \"File\",\n      \"name\": \"Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate Sweep -10V to +20V.SPE\",\n      \"contentSize\": \"3MB\",\n      \"encodingFormat\": \"application/octet-stream\"\n    }\n  ]\n}\n```\n\nThis ROCrate manifest includes the dataset, the person and organization involved, the instruments used, the software application for data acquisition, and the files generated. Each file is represented as a separate entry in the graph, specifying the name, size, and format. This manifest will help in ensuring the FAIRness of the data, making it Findable, Accessible, Interoperable, and Reusable.\n\n\n\n# Necessary imports\nimport os\nimport json\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.output_parsers import JsonOutputParser\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Initialize the LLM model and prompt template\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are an expert in FAIR data practices, schema.org, ROCrates. \"\n            \"Construct a JSON-LD ROCrate manifest based on this description. Ensure the output is valid JSON.\"\n        ),\n        MessagesPlaceholder(variable_name=\"messages\"),\n    ]\n)\n\nllm = ChatOpenAI(model=\"gpt-4-turbo\")\n\nmodel_generate = prompt | llm\n\n# Function to generate JSON-LD string using JSONOutputParser\ndef generate_jsonld_from_description(experiment_description: str) -&gt; dict:\n    model_as_text = \"\"\n    \n    request = HumanMessage(\n        content=experiment_description\n    )\n    \n    for chunk in model_generate.stream({\"messages\": [request]}):\n        model_as_text += chunk.content\n\n    # Parse the output using JSONOutputParser\n    output_parser = JsonOutputParser()\n    \n    try:\n        json_ld_output = output_parser.parse(model_as_text)\n    except Exception as e:\n        raise ValueError(f\"Generated output is not valid JSON: {e}\")\n\n    return json_ld_output\n\n# Example usage\nexperiment_description = \"\"\"\nThe owner of the instrument is the NSF facility MagLab (https://ror.org/03s53g630). Josiah Carberryâ€™s (https://orcid.org/0000-0002-1825-0097) data acquisition info:\n\nThe experimental data (spectra) are acquired by a spectrometer (#1 HRS750, #2 IsoPlane, Teledyne Princeton Instruments). The spectrometers are (almost) fully automated and controlled via the LightField software (Teledyne Princeton Instruments). LightField automatically saves the acquired data and all experiment settings (spectrometer settings) in one file. https://www.princetoninstruments.com/products/software-family/lightfield\n\nLightField saves files in *.SPE format (whatever it means).\n\nFolder name: PI name_Experiment ID_Magnet system-Instrument_Start date\nFile name: Type of the experiment: PL, Ra(man), Re(flectance), Tr(ansmittance) Sample short name: **** Magnetic field: ***T (or from to ) Temperature: ***K Light source: SC, 532nm, 785nm, â€¦ - Power: ***mW or uW, or percentage Central frequency / wl/energy: ***cm-1, nm, eV Slit: value: *** um Acq.time: ***min or sec Objective NA: ***NA Other: gate voltage, pressure, â€¦\n\nPL_WSe2-MoSe2_00.0T_to_05.2T_ 10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE Re_InSe_0T_5K_SC-20%600meV_50um_5sec 0.65NA_Gate Sweep -10V to +20V.SPE\n\"\"\"\n\njsonld_output = generate_jsonld_from_description(experiment_description)\nprint(json.dumps(jsonld_output, indent=2))\n\n{\n  \"@context\": \"https://w3id.org/ro/crate/1.1/context\",\n  \"@graph\": [\n    {\n      \"@id\": \"./\",\n      \"@type\": \"Dataset\",\n      \"name\": \"Experimental Spectra Data\",\n      \"description\": \"This dataset contains experimental spectra acquired using spectrometers controlled via LightField software.\",\n      \"datePublished\": \"2023-01-01\",\n      \"license\": \"http://creativecommons.org/licenses/by/4.0/\",\n      \"publisher\": {\n        \"@id\": \"https://ror.org/03s53g630\",\n        \"@type\": \"Organization\",\n        \"name\": \"MagLab\"\n      }\n    },\n    {\n      \"@id\": \"https://orcid.org/0000-0002-1825-0097\",\n      \"@type\": \"Person\",\n      \"name\": \"Josiah Carberry\"\n    },\n    {\n      \"@id\": \"https://www.princetoninstruments.com/products/software-family/lightfield\",\n      \"@type\": \"SoftwareApplication\",\n      \"name\": \"LightField\",\n      \"publisher\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"./data/\",\n      \"@type\": \"Dataset\",\n      \"name\": \"Spectra Files\",\n      \"content\": [\n        {\n          \"@id\": \"./data/PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\",\n          \"@type\": \"File\",\n          \"fileFormat\": \"application/octet-stream\",\n          \"description\": \"Photoluminescence spectra of WSe2-MoSe2.\"\n        },\n        {\n          \"@id\": \"./data/Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\",\n          \"@type\": \"File\",\n          \"fileFormat\": \"application/octet-stream\",\n          \"description\": \"Raman spectra of CsPr.\"\n        },\n        {\n          \"@id\": \"./data/Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate_Sweep_-10V_to_+20V.SPE\",\n          \"@type\": \"File\",\n          \"fileFormat\": \"application/octet-stream\",\n          \"description\": \"Reflectance spectra of InSe.\"\n        }\n      ]\n    },\n    {\n      \"@id\": \"#instrument1\",\n      \"@type\": \"Instrument\",\n      \"name\": \"HRS750\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"#instrument2\",\n      \"@type\": \"Instrument\",\n      \"name\": \"IsoPlane\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    }\n  ]\n}\n\n\n\nimport json\nimport rdflib\nfrom pyshacl import validate\n\n# Load SHACL shapes\nshacl_graph = rdflib.Graph()\nshacl_graph.parse(\"./pidinst-sh.ttl\", format=\"ttl\")\n\n# Convert JSON-LD to an RDF graph\ndata_graph = rdflib.Graph().parse(data=json.dumps(jsonld_output), format=\"json-ld\")\n\n# Validate data graph against SHACL shapes\nconforms, results_graph, results_text = validate(\n    data_graph,\n    shacl_graph=shacl_graph,\n    inference='rdfs',\n    abort_on_first=False,\n    meta_shacl=False,\n    advanced=True,\n    debug=False\n)\n\n# Output results\nprint(\"Conforms:\", conforms)\nprint(\"Results:\")\nprint(results_text)\n\nConforms: True\nResults:\nValidation Report\nConforms: True",
    "crumbs": [
      "LangGraph_Agent"
    ]
  },
  {
    "objectID": "fair_agent_langgraph.html#references-for-prototype",
    "href": "fair_agent_langgraph.html#references-for-prototype",
    "title": "LangGraph_Agent",
    "section": "",
    "text": "PIDInst Schema\nLangGraph HIL Reference\nForcing JSON-LD output structure\nPIDINST Schema Elements\nSchema.org Shapes\nHerbie - The Semantic Laboratory Notebook & Research Database\n\n\n# It appears that the 'langchain_openai' package is not installed. \n# We'll use a Jupyter bang command to install the necessary package.\n\nimport os\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import AIMessage, BaseMessage, HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nTrue\n\n\n\nexperiment_description = \"\"\"\nThe owner of the instrument is the NSF facility MagLab (https://ror.org/03s53g630). Josiah Carberryâ€™s (https://orcid.org/0000-0002-1825-0097) data acquisition info:\n\nThe experimental data (spectra) are acquired by a spectrometer (#1 HRS750, #2 IsoPlane, Teledyne Princeton Instruments). The spectrometers are (almost) fully automated and controlled via the LightField software (Teledyne Princeton Instruments). LightField automatically saves the acquired data and all experiment settings (spectrometer settings) in one file. https://www.princetoninstruments.com/products/software-family/lightfield\n\nLightField saves files in *.SPE format (whatever it means).\n\n\nFolder name: PI name_Experiment ID_Magnet system-Instrument_Start date\nFile name: Type of the experiment: PL, Ra(man), Re(flectance), Tr(ansmittance) Sample short name: **** Magnetic field: ***T (or from to ) Temperature: ***K Light source: SC, 532nm, 785nm, â€¦ - Power: ***mW or uW, or percentage Central frequency / wl/energy: ***cm-1, nm, eV Slit: value: *** um Acq.time: ***min or sec Objective NA: ***NA Other: gate voltage, pressure, â€¦\n\nPL_WSe2-MoSe2_00.0T_to_05.2T_ 10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE Re_InSe_0T_5K_SC-20%600meV_50um_5sec 0.65NA_Gate Sweep -10V to +20V.SPE\n\"\"\"\n\n\n# Necessary imports\nimport os\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Initialize the LLM model and prompt template\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are expert in FAIR data practices, schema.org, ROCrates. \"\n            \"Construct a JSON-LD ROCrate manifest based on this description. \"\n        ),\n        MessagesPlaceholder(variable_name=\"messages\"),\n    ]\n)\n\nllm = ChatOpenAI(model=\"gpt-4-turbo\")\n\nmodel_generate = prompt | llm\n\n# Function to generate JSON-LD string\ndef generate_jsonld_from_description(experiment_description: str) -&gt; str:\n    model_as_text = \"\"\n    \n    request = HumanMessage(\n        content=experiment_description\n    )\n    \n    for chunk in model_generate.stream({\"messages\": [request]}):\n        model_as_text += chunk.content\n\n    # The result should be the generated JSON-LD object\n    return model_as_text\n\n# Example usage\nexperiment_description = \"\"\"\nThe owner of the instrument is the NSF facility MagLab (https://ror.org/03s53g630). Josiah Carberryâ€™s (https://orcid.org/0000-0002-1825-0097) data acquisition info:\n\nThe experimental data (spectra) are acquired by a spectrometer (#1 HRS750, #2 IsoPlane, Teledyne Princeton Instruments). The spectrometers are (almost) fully automated and controlled via the LightField software (Teledyne Princeton Instruments). LightField automatically saves the acquired data and all experiment settings (spectrometer settings) in one file. https://www.princetoninstruments.com/products/software-family/lightfield\n\nLightField saves files in *.SPE format (whatever it means).\n\nFolder name: PI name_Experiment ID_Magnet system-Instrument_Start date\nFile name: Type of the experiment: PL, Ra(man), Re(flectance), Tr(ansmittance) Sample short name: **** Magnetic field: ***T (or from to ) Temperature: ***K Light source: SC, 532nm, 785nm, â€¦ - Power: ***mW or uW, or percentage Central frequency / wl/energy: ***cm-1, nm, eV Slit: value: *** um Acq.time: ***min or sec Objective NA: ***NA Other: gate voltage, pressure, â€¦\n\nPL_WSe2-MoSe2_00.0T_to_05.2T_ 10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE Re_InSe_0T_5K_SC-20%600meV_50um_5sec 0.65NA_Gate Sweep -10V to +20V.SPE\n\"\"\"\n\njsonld_output = generate_jsonld_from_description(experiment_description)\nprint(jsonld_output)\n\nTo construct a JSON-LD ROCrate manifest for the described dataset, we will include details about the dataset, the experiment, the instruments used, and the associated software. Below is an example of what the ROCrate manifest might look like based on the provided details:\n\n```json\n{\n  \"@context\": \"https://w3id.org/ro/crate/1.1/context\",\n  \"@graph\": [\n    {\n      \"@id\": \"ro-crate-metadata.json\",\n      \"@type\": \"CreativeWork\",\n      \"about\": {\"@id\": \"./\"},\n      \"identifier\": \"ro-crate-metadata.json\",\n      \"conformsTo\": {\"@id\": \"https://w3id.org/ro/crate/1.1\"}\n    },\n    {\n      \"@id\": \"./\",\n      \"@type\": \"Dataset\",\n      \"name\": \"Spectrometer Experimental Data\",\n      \"description\": \"Experimental data acquired using spectrometers at the NSF facility MagLab.\",\n      \"author\": {\n        \"@id\": \"https://orcid.org/0000-0002-1825-0097\"\n      },\n      \"dateCreated\": \"2023-09-20\",\n      \"license\": \"https://creativecommons.org/licenses/by/4.0/\"\n    },\n    {\n      \"@id\": \"https://orcid.org/0000-0002-1825-0097\",\n      \"@type\": \"Person\",\n      \"name\": \"Josiah Carberry\",\n      \"affiliation\": {\n        \"@id\": \"https://ror.org/03s53g630\"\n      }\n    },\n    {\n      \"@id\": \"https://ror.org/03s53g630\",\n      \"@type\": \"Organization\",\n      \"name\": \"MagLab\",\n      \"url\": \"https://nationalmaglab.org/\"\n    },\n    {\n      \"@id\": \"HRS750\",\n      \"@type\": \"Instrument\",\n      \"name\": \"HRS750 Spectrometer\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"IsoPlane\",\n      \"@type\": \"Instrument\",\n      \"name\": \"IsoPlane Spectrometer\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"https://www.princetoninstruments.com/products/software-family/lightfield\",\n      \"@type\": \"SoftwareApplication\",\n      \"name\": \"LightField\",\n      \"publisher\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@type\": \"File\",\n      \"name\": \"PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\",\n      \"contentSize\": \"2MB\",\n      \"encodingFormat\": \"application/octet-stream\"\n    },\n    {\n      \"@type\": \"File\",\n      \"name\": \"Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\",\n      \"contentSize\": \"1.5MB\",\n      \"encodingFormat\": \"application/octet-stream\"\n    },\n    {\n      \"@type\": \"File\",\n      \"name\": \"Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate Sweep -10V to +20V.SPE\",\n      \"contentSize\": \"3MB\",\n      \"encodingFormat\": \"application/octet-stream\"\n    }\n  ]\n}\n```\n\nThis ROCrate manifest includes the dataset, the person and organization involved, the instruments used, the software application for data acquisition, and the files generated. Each file is represented as a separate entry in the graph, specifying the name, size, and format. This manifest will help in ensuring the FAIRness of the data, making it Findable, Accessible, Interoperable, and Reusable.\n\n\n\n# Necessary imports\nimport os\nimport json\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.output_parsers import JsonOutputParser\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Initialize the LLM model and prompt template\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are an expert in FAIR data practices, schema.org, ROCrates. \"\n            \"Construct a JSON-LD ROCrate manifest based on this description. Ensure the output is valid JSON.\"\n        ),\n        MessagesPlaceholder(variable_name=\"messages\"),\n    ]\n)\n\nllm = ChatOpenAI(model=\"gpt-4-turbo\")\n\nmodel_generate = prompt | llm\n\n# Function to generate JSON-LD string using JSONOutputParser\ndef generate_jsonld_from_description(experiment_description: str) -&gt; dict:\n    model_as_text = \"\"\n    \n    request = HumanMessage(\n        content=experiment_description\n    )\n    \n    for chunk in model_generate.stream({\"messages\": [request]}):\n        model_as_text += chunk.content\n\n    # Parse the output using JSONOutputParser\n    output_parser = JsonOutputParser()\n    \n    try:\n        json_ld_output = output_parser.parse(model_as_text)\n    except Exception as e:\n        raise ValueError(f\"Generated output is not valid JSON: {e}\")\n\n    return json_ld_output\n\n# Example usage\nexperiment_description = \"\"\"\nThe owner of the instrument is the NSF facility MagLab (https://ror.org/03s53g630). Josiah Carberryâ€™s (https://orcid.org/0000-0002-1825-0097) data acquisition info:\n\nThe experimental data (spectra) are acquired by a spectrometer (#1 HRS750, #2 IsoPlane, Teledyne Princeton Instruments). The spectrometers are (almost) fully automated and controlled via the LightField software (Teledyne Princeton Instruments). LightField automatically saves the acquired data and all experiment settings (spectrometer settings) in one file. https://www.princetoninstruments.com/products/software-family/lightfield\n\nLightField saves files in *.SPE format (whatever it means).\n\nFolder name: PI name_Experiment ID_Magnet system-Instrument_Start date\nFile name: Type of the experiment: PL, Ra(man), Re(flectance), Tr(ansmittance) Sample short name: **** Magnetic field: ***T (or from to ) Temperature: ***K Light source: SC, 532nm, 785nm, â€¦ - Power: ***mW or uW, or percentage Central frequency / wl/energy: ***cm-1, nm, eV Slit: value: *** um Acq.time: ***min or sec Objective NA: ***NA Other: gate voltage, pressure, â€¦\n\nPL_WSe2-MoSe2_00.0T_to_05.2T_ 10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE Re_InSe_0T_5K_SC-20%600meV_50um_5sec 0.65NA_Gate Sweep -10V to +20V.SPE\n\"\"\"\n\njsonld_output = generate_jsonld_from_description(experiment_description)\nprint(json.dumps(jsonld_output, indent=2))\n\n{\n  \"@context\": \"https://w3id.org/ro/crate/1.1/context\",\n  \"@graph\": [\n    {\n      \"@id\": \"./\",\n      \"@type\": \"Dataset\",\n      \"name\": \"Experimental Spectra Data\",\n      \"description\": \"This dataset contains experimental spectra acquired using spectrometers controlled via LightField software.\",\n      \"datePublished\": \"2023-01-01\",\n      \"license\": \"http://creativecommons.org/licenses/by/4.0/\",\n      \"publisher\": {\n        \"@id\": \"https://ror.org/03s53g630\",\n        \"@type\": \"Organization\",\n        \"name\": \"MagLab\"\n      }\n    },\n    {\n      \"@id\": \"https://orcid.org/0000-0002-1825-0097\",\n      \"@type\": \"Person\",\n      \"name\": \"Josiah Carberry\"\n    },\n    {\n      \"@id\": \"https://www.princetoninstruments.com/products/software-family/lightfield\",\n      \"@type\": \"SoftwareApplication\",\n      \"name\": \"LightField\",\n      \"publisher\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"./data/\",\n      \"@type\": \"Dataset\",\n      \"name\": \"Spectra Files\",\n      \"content\": [\n        {\n          \"@id\": \"./data/PL_WSe2-MoSe2_00.0T_to_05.2T_10K_633nm-100uW_720nm_30um_2min_0.65NA.SPE\",\n          \"@type\": \"File\",\n          \"fileFormat\": \"application/octet-stream\",\n          \"description\": \"Photoluminescence spectra of WSe2-MoSe2.\"\n        },\n        {\n          \"@id\": \"./data/Ra_CsPr_30T_7.2K_532nm-2mW_550cm-1_30um_3x2min_0.82NA.SPE\",\n          \"@type\": \"File\",\n          \"fileFormat\": \"application/octet-stream\",\n          \"description\": \"Raman spectra of CsPr.\"\n        },\n        {\n          \"@id\": \"./data/Re_InSe_0T_5K_SC-20%600meV_50um_5sec_0.65NA_Gate_Sweep_-10V_to_+20V.SPE\",\n          \"@type\": \"File\",\n          \"fileFormat\": \"application/octet-stream\",\n          \"description\": \"Reflectance spectra of InSe.\"\n        }\n      ]\n    },\n    {\n      \"@id\": \"#instrument1\",\n      \"@type\": \"Instrument\",\n      \"name\": \"HRS750\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    },\n    {\n      \"@id\": \"#instrument2\",\n      \"@type\": \"Instrument\",\n      \"name\": \"IsoPlane\",\n      \"manufacturer\": \"Teledyne Princeton Instruments\"\n    }\n  ]\n}\n\n\n\nimport json\nimport rdflib\nfrom pyshacl import validate\n\n# Load SHACL shapes\nshacl_graph = rdflib.Graph()\nshacl_graph.parse(\"./pidinst-sh.ttl\", format=\"ttl\")\n\n# Convert JSON-LD to an RDF graph\ndata_graph = rdflib.Graph().parse(data=json.dumps(jsonld_output), format=\"json-ld\")\n\n# Validate data graph against SHACL shapes\nconforms, results_graph, results_text = validate(\n    data_graph,\n    shacl_graph=shacl_graph,\n    inference='rdfs',\n    abort_on_first=False,\n    meta_shacl=False,\n    advanced=True,\n    debug=False\n)\n\n# Output results\nprint(\"Conforms:\", conforms)\nprint(\"Results:\")\nprint(results_text)\n\nConforms: True\nResults:\nValidation Report\nConforms: True",
    "crumbs": [
      "LangGraph_Agent"
    ]
  },
  {
    "objectID": "debug_pyshacl.html",
    "href": "debug_pyshacl.html",
    "title": "agentic-notebook-exp",
    "section": "",
    "text": "from pyshacl import validate\n\n# Load the SHACL shape from file\nwith open('pidinst-sh.ttl', 'r') as f:\n    shacl_shape = f.read()\n\n# Load the RDF data graph from file  \nwith open('non-valid.ttl', 'r') as f:\n    data_graph = f.read()\n\n# Validate the data graph against the SHACL shape\nconforms, results_graph, results_text = validate(\n    data_graph,\n    shacl_graph=shacl_shape,\n    data_graph_format='turtle',\n    shacl_graph_format='turtle',\n    inference='none', \n    debug=True,\n    serialize_report_graph=True\n)\n\nprint(conforms)\nprint(results_text)\n\nRunning validation in-place, without modifying the DataGraph.\nFound 9 SHACL Shapes defined with type sh:NodeShape.\nFound 0 SHACL Shapes defined with type sh:PropertyShape.\nFound 0 property paths to follow.\nFound 25 implied SHACL Shapes based on their properties.\nFound 73 implied SHACL Shapes used as values in shape-expecting constraints.\nCached 21 unique NodeShapes and 53 unique PropertyShapes.\nWill run validation on 1 named graph/s.\nValidating DataGraph named urn:x-rdflib:default\nChecking if Shape &lt;NodeShape http://example.com/ns#OwnerShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.039ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#OwnerShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#ManufacturerShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.030ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#ManufacturerShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#IdentifierShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.050ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#IdentifierShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb64&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.022ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb64&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb83&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.020ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb83&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb82&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.020ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb82&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb61&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.018ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb61&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#RelatedIdentifierShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.023ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#RelatedIdentifierShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb53&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.018ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb53&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb39&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.022ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb39&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#InstrumentTypeShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.019ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#InstrumentTypeShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#ModelShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.020ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#ModelShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb50&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.016ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb50&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#AlternateIdentifierShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.020ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#AlternateIdentifierShape&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb72&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.019ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb72&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb81&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.103ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb81&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb42&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.018ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb42&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb75&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb75&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb84&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.016ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape nc5fabad847c6456dbcc76fd090203c3eb84&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#PIDinstSchema&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.016ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#PIDinstSchema&gt; because it found no focus nodes.\nChecking if Shape &lt;NodeShape http://example.com/ns#DateShape&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;NodeShape http://example.com/ns#DateShape&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb62&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb62&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb63&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.016ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb63&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb92&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb92&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb71&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.016ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb71&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb3&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb3&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb1&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb1&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb58&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb58&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb9&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb9&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb69&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb69&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb2&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb2&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb105&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb105&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb51&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb51&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb70&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb70&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb37&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.014ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb37&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb15&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb15&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb52&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.037ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb52&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb89&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.017ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb89&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb35&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.014ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb35&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb125&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb125&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb12&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.010ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb12&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb13&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb13&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb41&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb41&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb126&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb126&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb7&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.015ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb7&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb5&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.022ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb5&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb8&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb8&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb66&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb66&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb10&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb10&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb76&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.020ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb76&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb80&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb80&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb104&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb104&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb4&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb4&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb55&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb55&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb6&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb6&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb40&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.010ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb40&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb11&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb11&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb60&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.016ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb60&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb73&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb73&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb49&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb49&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb93&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb93&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb77&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb77&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb47&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb47&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb36&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.010ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb36&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb38&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb38&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb54&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.014ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb54&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb59&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb59&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb65&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.011ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb65&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb127&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb127&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb48&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.022ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb48&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb74&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.012ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb74&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb43&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.030ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb43&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb14&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.033ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb14&gt; because it found no focus nodes.\nChecking if Shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb44&gt; defines its own targets.\nIdentifying targets to find focus nodes.\nMilliseconds to find focus nodes: 0.013ms\nFound 0 Focus Nodes to evaluate.\nSkipping shape &lt;PropertyShape nc5fabad847c6456dbcc76fd090203c3eb44&gt; because it found no focus nodes.\n\n\nTrue\nValidation Report\nConforms: True",
    "crumbs": [
      "debug_pyshacl.html"
    ]
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nfoo\n\n foo ()",
    "crumbs": [
      "core"
    ]
  }
]